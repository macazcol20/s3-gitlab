infra:
  postgresql: false
  keycloak: false
  rabbitmq: false
  project-grpc-nodeport: false
  postgres-integration-svc: false

## The documenation for this chart can be found here: 
## https://github.com/codecentric/helm-charts/tree/master/charts/keycloak 
## This config assumes there is a secret named `realm-secret` that contains `realm.json`
## The config is mounted inside the container at `/opt/keycloak/data/import/realm.json`
keycloak:
  image:
    repository: registry1.dso.mil/ironbank/opensource/keycloak/keycloak
    tag: 21.1.2
  imagePullSecrets: {}

  postgresql:
    enabled: false
  command:
    - "/opt/keycloak/bin/kc.sh"
  args:
    - "start-dev"
    - "--import-realm"
    - "--health-enabled=true"
  extraVolumes: |
    - name: realm-secret
      secret:
        secretName: realm-secret
  extraVolumeMounts: |
    - name: realm-secret
      mountPath: "/opt/keycloak/data/import/"
      readOnly: true
  extraEnv: |
    - name: KEYCLOAK_IMPORT
      value: /opt/keycloak/data/import/realm.json
    - name: KEYCLOAK_REFLECT_REALM_NAME
      value: "reflect"
    - name: KEYCLOAK_REFLECT_TEST_USERNAME
      value: "hello"
    - name: KEYCLOAK_ADMIN
      value: "admin"
    - name: KEYCLOAK_ADMIN_PASSWORD
      value: "admin"
    - name: KEYCLOAK_LOGLEVEL
      value: DEBUG
  secrets:
    env:
      stringData:
        KEYCLOAK_ADMIN: "admin"
        KEYCLOAK_ADMIN_PASSWORD: "admin"
  livenessProbe: |
    httpGet:
      path: /health/live
      port: http
    initialDelaySeconds: 0
    timeoutSeconds: 5
  readinessProbe: |
    httpGet:
      path: /auth/ready
      port: http
    initialDelaySeconds: 30
    timeoutSeconds: 1
  startupProbe: |
    httpGet:
      path: /health/started
      port: http
    initialDelaySeconds: 30
    timeoutSeconds: 1
    failureThreshold: 60
    periodSeconds: 5
  ingress:
    enabled: true
    ingressClassName: nginx
    rules:
      - 
        host: 'unity.keycloak.local'
        paths: 
          - path: /
            pathType: Prefix

## The documentation for this chart can be found here:
## https://github.com/bitnami/charts/tree/main/bitnami/postgresql
postgresql:
  global:
    imagePullSecrets: {}
    auth:
      postgresPassword: "reflect"
  image:
    registry: registry1.dso.mil
    repository: ironbank/bitnami/postgres/postgresql11
    tag: 11.19.0
    pullSecrets: {}
  auth:
    postgresPassword: "reflect"
#    username: "project_service"
#    password: "reflect"
  primary:
    extendedConfiguration: |
      max_connections = 400
    extraEnvVars:
    - name: POSTGRES_USER
      value: "postgres"
    - name: PROJECT_SERVICE_DB_PASSWORD
      value: "reflect"
    - name: SYNC_SERVICE_DB_PASSWORD
      value: "reflect"
    - name: ANNOTATIONS_DB_PASSWORD
      value: "reflect"
    - name: MATCHMAKER_DB_PASSWORD
      value: "reflect"
    - name: MURMUR_DB_PASSWORD
      value: "reflect"
    initdb:
# This is a configmap that contains scripts and sql files that is mounted into the postgres container and executed on first boot
# UnComment if scripts have been added to a configmap. Will overwrite primary.initdb.scripts.*.  
      scriptsConfigMap: "db-init"
# These are script used to intializse users in the postgres db. If using migrations to update/seed the database, uncomment the section below to initialize
# the user and databases for the migration scripts
      #scripts:
      #  create_users.sql : | 
      #     CREATE USER project_service WITH ENCRYPTED PASSWORD 'reflect';
      #     CREATE DATABASE "ProjectService" WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.utf8' LC_CTYPE = 'en_US.utf8' OWNER project_service;
      #     CREATE USER sync_service WITH ENCRYPTED PASSWORD 'reflect';
      #     CREATE DATABASE "SyncService" WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.utf8' LC_CTYPE = 'en_US.utf8' OWNER sync_service;
      #     CREATE DATABASE "SyncService_Hangfire" WITH OWNER sync_service;
      persistence:
        enabled: true
        storageClass: "longhorn" 
        size: 5Gi

## The project service chart depends on another chart `reflect-common-chart`
project:
  reflect-common-chart:
    imagePullSecrets: {}
    image:
      repository: us-east1-docker.pkg.dev/unity-solutions-tyndall-prd/docker/reflect-project
      tag: develop-latest
    resources: {}
    serviceMonitor:
      enabled: false
    ingress:
      project-grpc:
        annotations:
          nginx.ingress.kubernetes.io/use-regex: "true"
        ingressClassName: nginx
        hosts:
          - host: develop.unity.project-service.local
            http:
              paths:
                - backend:
                    service:
                      name: project
                      port:
                        name: http
                  path: /(api|swagger|v1)
                  pathType: Prefix
                - backend:
                    service:
                      name: project
                      port: 
                        name: grpc
                  path: /
                  pathType: ImplementationSpecific
          - host: develop-web.unity.project-service.local
            http:
              paths:
                - backend:
                    service:
                      name: project
                      port: 
                        name: grpc-web
                  path: /
                  pathType: ImplementationSpecific
#        tls:
#          - secretName: reflect-tls
#            hosts:
#              - p.develop.opr.unity.com
#              - web.p.develop.opr.unity.com

    workloadIdentity:
      enabled: false
    cloudSqlSidecar:
      enabled: false
    autoscaling:
      enabled: false
#    volumes:
#      - name: jwt
#        secret:
#          defaultMode: 420
#          secretName: jwt
    serviceAccount:
      create: true
      name: reflect-project-sa
    deployment:
      envFrom:
      - secretRef:
          name: project-external-secrets
      - configMapRef:
          name: project-config
    configMaps:
      project-config:
        data:
          REFLECTPROJECT_ServerEndpoint__Host: 0.0.0.0
          REFLECT_CLOUD: "OnPrem"
          REFLECT_GATEWAY: unity.project-service.local
          REFLECT_DOMAIN: "BAH OPR"
          REFLECTPROJECT_Security__OnPrem__OrganizationName: "Tyndall Air Force Base"
          REFLECTPROJECT_Security__OnPrem__ClientId: "reflect"
          REFLECTPROJECT_Security__OnPrem__ValidIssuer: "http://unity.keycloak.local:8080/realms/reflect"
          REFLECTPROJECT_Security__OnPrem__Domain: "BAH OPR"
          REFLECTPROJECT_Security__OnPrem__Scope: "openid"
          REFLECTPROJECT_Security__OnPrem__ViewerProtocol: "reflect"
          REFLECTPROJECT_Security__OnPrem__ClientIdClaim: "azp"
          REFLECTPROJECT_Security__OnPrem__NameClaim: "preferred_username"
          REFLECTPROJECT_Security__OnPrem__RealmAccessRoleListOwnerOrManagerRole: "ReflectOwnerManagerRole"
          REFLECTPROJECT_Security__OnPrem__RealmAccessRoleListUserRole: "ReflectUserRole"
          REFLECTPROJECT_Security__OnPrem__AuthorizeEndpoint: "http://unity.keycloak.local:8080/realms/reflect/protocol/openid-connect/auth"
          REFLECTPROJECT_Security__OnPrem__RevokeEndpoint: "http://unity.keycloak.local:8080/realms/reflect/protocol/openid-connect/revoke"
          REFLECTPROJECT_Security__OnPrem__TokenEndpoint: "http://unity.keycloak.local:8080/realms/reflect/protocol/openid-connect/token"
          REFLECTPROJECT_Security__OnPrem__RefreshEndpoint: "http://unity.keycloak.local:8081/realms/reflect/protocol/openid-connect/token"
          REFLECTPROJECT_Security__OnPrem__OAuthJwkUrl: "http://unity.keycloak.local:8080/realms/reflect/protocol/openid-connect/certs"
          REFLECTPROJECT_Security__OnPrem__UserInfoEndpoint: "http://unity.keycloak.local:8080/realms/reflect/protocol/openid-connect/userinfo"
    # disables external secrets and use standard k8s secrets
    externalSecrets:
      enabled: false
    # Secrets for reflect-project container
    secrets:
      project-external-secrets:
        type: Opaque
        data:
          REFLECTPROJECT_ConnectionStrings__ProjectServiceDatabase: "Host=opr-postgresql;Database=ProjectService;Username=project_service;Password=reflect"
    # Envoy required to upgrade grpc connections
    sidecarContainers:
      enabled: true
      containers:
        - image: us-east1-docker.pkg.dev/unity-solutions-tyndall-prd/docker/reflect-envoy:develop-latest
          imagePullPolicy: IfNotPresent
          imagePullSecrets: {}
          securityContext:
            runAsUser: 2
            allowPrivilegeEscalation: false
          name: envoy
          resources: null
# Default values for the OPR Sync helm chart
sync:
  api:
    reflect-common-chart:
      image:
        repository: us-east1-docker.pkg.dev/unity-solutions-tyndall-prd/docker/reflect-sync
        tag: develop-latest
      imagePullSecrets:
        - name: regcred-gcp
      serviceMonitor:
        enabled: false
      cloudSqlSidecar:
        enabled: false
      autoscaling:
        enabled: false
      podMonitor:
        enabled: false
      configMaps:
        sync-api-config:
          data:
            REFLECTSYNC_HttpServer__ExceptionContextResponseEnabled: "true"
            REFLECTSYNC_Storage__Backend: Bucket
            REFLECTSYNC_Storage__Bucket__BucketName__Default: sync-service-dev
            REFLECTSYNC_Storage__Bucket__ProviderName: AWS
            REFLECTSYNC_Storage__Bucket__ProviderUrl: https://minio-api-develop.opr.unity.com
            REFLECTSYNC_Swagger__Enabled: "false"
            REFLECTSYNC_MessageBroker__Backend: MassTransit
            REFLECTSYNC_MessageBroker__MassTransit__Transport: RabbitMQ
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__SyncSessionTopicId: sync-sessions
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__HostName: opr-rabbitmq
            REFLECTSYNC_PixyzOptimizeSdk__Enabled: "false"
            REFLECTSYNC_Kestrel__EndpointDefaults__Protocols: Http1AndHttp2
            REFLECTSYNC_Storage__Bucket__RetryPolicy__InitialDelay: "00:00:01"
            REFLECTSYNC_Storage__Bucket__RetryPolicy__MaxRetries: "10"
            REFLECTSYNC_ProjectMetadata__Backend: "Database"
            REFLECTSYNC_ProjectServer__Address: "https://web-develop.opr.unity.com"
            REFLECTSYNC_ProjectServer__HttpAddress: "https://develop.opr.unity.com"
  
      secrets:
        sync-api-secrets:
          type: Opaque
          data:
            REFLECTSYNC_ConnectionStrings__SyncServiceDatabase: "Host=opr-postgresql;Database=SyncService;Username=sync_service;Password=reflect"
            REFLECTSYNC_ProjectServer__ClientId: "syncid"
            REFLECTSYNC_ProjectServer__ClientSecret: "syncsecret"
            REFLECTSYNC_Storage__Bucket__AccessKeyId: minio
            REFLECTSYNC_Storage__Bucket__SecretAccessKey: minio123
            REFLECTSYNC_MessageBroker__MassTransit__HangfireConnectionString: "Host=opr-postgresql;Database=SyncService_Hangfire;Username=sync_service;Password=reflect"
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Username: admin
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Password: rabbitmq-secret-key
      ingress:
        sync-api-grpc:
          ingressClassName: nginx
          hosts:
            - host: sync-develop.opr.unity.com
              http:
                paths:
                  - backend:
                      service:
                        name: sync-api
                        port:
                          name: grpc
                    path: /
                    pathType: ImplementationSpecific
          tls:
            - secretName: sync-develop-tls
              hosts:
                - sync-develop.opr.unity.com
        sync-api-http:
          ingressClassName: nginx
          hosts:
            - host: sync-develop.opr.unity.com
              http:
                paths:
                  - backend:
                      service:
                        name: sync-api
                        port:
                          name: http
                    path: /api
                    pathType: ImplementationSpecific
          tls:
            - secretName: sync-develop-tls
              hosts:
                - sync-develop.opr.unity.com
  
  decimator:
    reflect-common-chart:
      image:
        repository: us-east1-docker.pkg.dev/unity-solutions-tyndall-prd/docker/reflect-sync
        tag: develop-latest
      imagePullSecrets:
        - name: regcred-gcp
      serviceMonitor:
        enabled: false
      cloudSqlSidecar:
        enabled: false
      autoscaling:
        enabled: false
      configMaps:
        sync-decimator-config:
          data:
            REFLECTSYNC_HttpServer__ExceptionContextResponseEnabled: "true"
            REFLECTSYNC_Storage__Backend: Bucket
            REFLECTSYNC_Storage__Bucket__BucketName__Default: sync-service-dev
            REFLECTSYNC_Storage__Bucket__ProviderName: AWS
            REFLECTSYNC_Storage__Bucket__ProviderUrl: https://minio-api-develop.opr.unity.com
            REFLECTSYNC_Swagger__Enabled: "false"
            REFLECTSYNC_MessageBroker__Backend: MassTransit
            REFLECTSYNC_MessageBroker__MassTransit__Transport: RabbitMQ
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__HostName: opr-rabbitmq
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__SyncSessionTopicId: sync-sessions
            REFLECTSYNC_PixyzOptimizeSdk__Enabled: "false"
            REFLECTSYNC_Kestrel__EndpointDefaults__Protocols: Http1AndHttp2
            REFLECTSYNC_Storage__Bucket__RetryPolicy__InitialDelay: "00:00:01"
            REFLECTSYNC_Storage__Bucket__RetryPolicy__MaxRetries: "10"
            REFLECTSYNC_ProjectMetadata__Backend: "Database"
            REFLECTSYNC_ProjectServer__Address: "https://web-develop.opr.unity.com"
            REFLECTSYNC_ProjectServer__HttpAddress: "https://develop.opr.unity.com"
      secrets:
        sync-decimator-secrets:
          type: Opaque
          data:
            REFLECTSYNC_ConnectionStrings__SyncServiceDatabase: "Host=opr-postgresql;Database=SyncService;Username=sync_service;Password=reflect"
            REFLECTSYNC_ProjectServer__ClientId: "syncid"
            REFLECTSYNC_ProjectServer__ClientSecret: "syncsecret"
            REFLECTSYNC_Storage__Bucket__AccessKeyId: minio
            REFLECTSYNC_Storage__Bucket__SecretAccessKey: minio123
            REFLECTSYNC_MessageBroker__MassTransit__HangfireConnectionString: "Host=opr-postgresql;Database=SyncService_Hangfire;Username=sync_service;Password=reflect"
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Username: admin
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Password: rabbitmq-secret-key
  
  hlodbuilder:
    reflect-common-chart:
      image:
        repository: us-east1-docker.pkg.dev/unity-solutions-tyndall-prd/docker/reflect-sync
        tag: develop-latest
      imagePullSecrets:
        - name: regcred-gcp
      serviceMonitor:
        enabled: false
      cloudSqlSidecar:
        enabled: false
      autoscaling:
        enabled: false
      overprovisioning:
        enabled: false
      configMaps:
        sync-hlodbuilder-config:
          data:
            REFLECTSYNC_HttpServer__ExceptionContextResponseEnabled: "true"
            REFLECTSYNC_Storage__Backend: Bucket
            REFLECTSYNC_Storage__Bucket__BucketName__Default: sync-service-dev
            REFLECTSYNC_Storage__Bucket__ProviderName: AWS
            REFLECTSYNC_Storage__Bucket__ProviderUrl: https://minio-api-develop.opr.unity.com
            REFLECTSYNC_Swagger__Enabled: "false"
            REFLECTSYNC_MessageBroker__Backend: MassTransit
            REFLECTSYNC_MessageBroker__MassTransit__Transport: RabbitMQ
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__SyncSessionTopicId: sync-sessions
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__HostName: opr-rabbitmq
            REFLECTSYNC_PixyzOptimizeSdk__Enabled: "false"
            REFLECTSYNC_Kestrel__EndpointDefaults__Protocols: Http1AndHttp2
            REFLECTSYNC_Storage__Bucket__RetryPolicy__InitialDelay: "00:00:01"
            REFLECTSYNC_Storage__Bucket__RetryPolicy__MaxRetries: "10"
            REFLECTSYNC_ProjectMetadata__Backend: "Database"
            REFLECTSYNC_ProjectServer__Address: "https://web-develop.opr.unity.com"
            REFLECTSYNC_ProjectServer__HttpAddress: "https://develop.opr.unity.com"
      secrets:
        sync-hlodbuilder-secrets:
          type: Opaque
          data:
            REFLECTSYNC_ConnectionStrings__SyncServiceDatabase: "Host=opr-postgresql;Database=SyncService;Username=sync_service;Password=reflect"
            REFLECTSYNC_ProjectServer__ClientId: "syncid"
            REFLECTSYNC_ProjectServer__ClientSecret: "syncsecret"
            REFLECTSYNC_Storage__Bucket__AccessKeyId: minio
            REFLECTSYNC_Storage__Bucket__SecretAccessKey: minio123
            REFLECTSYNC_MessageBroker__MassTransit__HangfireConnectionString: "Host=opr-postgresql;Database=SyncService_Hangfire;Username=sync_service;Password=reflect"
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Username: admin
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Password: rabbitmq-secret-key
  
  worker:
    reflect-common-chart:
      image:
        repository: us-east1-docker.pkg.dev/unity-solutions-tyndall-prd/docker/reflect-sync
        tag: develop-latest
      imagePullSecrets:
        - name: regcred-gcp
      serviceMonitor:
        enabled: false
      cloudSqlSidecar:
        enabled: false
      autoscaling:
        enabled: false
      podMonitor:
        enabled: false
      configMaps:
        sync-worker-config:
          data:
            REFLECTSYNC_HttpServer__ExceptionContextResponseEnabled: "true"
            REFLECTSYNC_Storage__Backend: Bucket
            REFLECTSYNC_Storage__Bucket__BucketName__Default: sync-service-dev
            REFLECTSYNC_Storage__Bucket__ProviderName: AWS
            REFLECTSYNC_Storage__Bucket__ProviderUrl: https://minio-api-develop.opr.unity.com
            REFLECTSYNC_Swagger__Enabled: "false"
            REFLECTSYNC_MessageBroker__Backend: MassTransit
            REFLECTSYNC_MessageBroker__MassTransit__Transport: RabbitMQ
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__SyncSessionTopicId: sync-sessions
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__HostName: opr-rabbitmq
            REFLECTSYNC_PixyzOptimizeSdk__Enabled: "false"
            REFLECTSYNC_Kestrel__EndpointDefaults__Protocols: Http1AndHttp2
            REFLECTSYNC_Storage__Bucket__RetryPolicy__InitialDelay: "00:00:01"
            REFLECTSYNC_Storage__Bucket__RetryPolicy__MaxRetries: "10"
            REFLECTSYNC_ProjectMetadata__Backend: "Database"
            REFLECTSYNC_ProjectServer__Address: "https://web-develop.opr.unity.com"
            REFLECTSYNC_ProjectServer__HttpAddress: "https://develop.opr.unity.com"
  
      secrets:
        sync-worker-secrets:
          type: Opaque
          data:
            REFLECTSYNC_ConnectionStrings__SyncServiceDatabase: "Host=opr-postgresql;Database=SyncService;Username=sync_service;Password=reflect"
            REFLECTSYNC_ProjectServer__ClientId: "syncid"
            REFLECTSYNC_ProjectServer__ClientSecret: "syncsecret"
            REFLECTSYNC_Storage__Bucket__AccessKeyId: minio
            REFLECTSYNC_Storage__Bucket__SecretAccessKey: minio123
            REFLECTSYNC_MessageBroker__MassTransit__HangfireConnectionString: "Host=opr-postgresql;Database=SyncService_Hangfire;Username=sync_service;Password=reflect"
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Username: admin
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Password: rabbitmq-secret-key
  
  modelprocessor:
    reflect-common-chart:
      image:
        repository: us-east1-docker.pkg.dev/unity-solutions-tyndall-prd/docker/reflect-sync
        tag: develop-latest
      imagePullSecrets:
        - name: regcred-gcp
      serviceMonitor:
        enabled: false
      cloudSqlSidecar:
        enabled: false
      autoscaling:
        enabled: false
      configMaps:
        sync-modelprocessor-config:
          data:
            REFLECTSYNC_HttpServer__ExceptionContextResponseEnabled: "true"
            REFLECTSYNC_Storage__Backend: Bucket
            REFLECTSYNC_Storage__Bucket__BucketName__Default: sync-service-dev
            REFLECTSYNC_Storage__Bucket__ProviderName: AWS
            REFLECTSYNC_Storage__Bucket__ProviderUrl: https://minio-api-develop.opr.unity.com
            REFLECTSYNC_Swagger__Enabled: "false"
            REFLECTSYNC_MessageBroker__Backend: MassTransit
            REFLECTSYNC_MessageBroker__MassTransit__Transport: RabbitMQ
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__SyncSessionTopicId: sync-sessions
            REFLECTSYNC_PixyzOptimizeSdk__Enabled: "false"
            REFLECTSYNC_Kestrel__EndpointDefaults__Protocols: Http1AndHttp2
            REFLECTSYNC_Storage__Bucket__RetryPolicy__InitialDelay: "00:00:01"
            REFLECTSYNC_Storage__Bucket__RetryPolicy__MaxRetries: "10"
            REFLECTSYNC_ProjectMetadata__Backend: "Database"
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__HostName: opr-rabbitmq
            REFLECTSYNC_ProjectServer__Address: "https://web-develop.opr.unity.com"
            REFLECTSYNC_ProjectServer__HttpAddress: "https://develop.opr.unity.com"
  
      secrets:
        sync-modelprocessor-secrets:
          type: Opaque
          data:
            REFLECTSYNC_ConnectionStrings__SyncServiceDatabase: "Host=opr-postgresql;Database=SyncService;Username=sync_service;Password=reflect"
            REFLECTSYNC_ProjectServer__ClientId: "syncid"
            REFLECTSYNC_ProjectServer__ClientSecret: "syncsecret"
            REFLECTSYNC_Storage__Bucket__AccessKeyId: minio
            REFLECTSYNC_Storage__Bucket__SecretAccessKey: minio123
            REFLECTSYNC_MessageBroker__MassTransit__HangfireConnectionString: "Host=opr-postgresql;Database=SyncService_Hangfire;Username=sync_service;Password=reflect"
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Username: admin
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Password: rabbitmq-secret-key
  
  
  modelprocessor-safemode:
    reflect-common-chart:
      image:
        repository: us-east1-docker.pkg.dev/unity-solutions-tyndall-prd/docker/reflect-sync
        tag: develop-latest
      imagePullSecrets:
        - name: regcred-gcp
      serviceMonitor:
        enabled: false
      cloudSqlSidecar:
        enabled: false
      autoscaling:
        enabled: false
      configMaps:
        sync-modelprocessor-safemode-config:
          data:
            REFLECTSYNC_HttpServer__ExceptionContextResponseEnabled: "true"
            REFLECTSYNC_Storage__Backend: Bucket
            REFLECTSYNC_Storage__Bucket__BucketName__Default: sync-service-dev
            REFLECTSYNC_Storage__Bucket__ProviderName: AWS
            REFLECTSYNC_Storage__Bucket__ProviderUrl: https://minio-api-develop.opr.unity.com
            REFLECTSYNC_Swagger__Enabled: "false"
            REFLECTSYNC_MessageBroker__Backend: MassTransit
            REFLECTSYNC_MessageBroker__MassTransit__Transport: RabbitMQ
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__SyncSessionTopicId: sync-sessions
            REFLECTSYNC_PixyzOptimizeSdk__Enabled: "false"
            REFLECTSYNC_Kestrel__EndpointDefaults__Protocols: Http1AndHttp2
            REFLECTSYNC_Storage__Bucket__RetryPolicy__InitialDelay: "00:00:01"
            REFLECTSYNC_Storage__Bucket__RetryPolicy__MaxRetries: "10"
            REFLECTSYNC_ProjectMetadata__Backend: "Database"
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__HostName: opr-rabbitmq
            REFLECTSYNC_ProjectServer__Address: "https://web-develop.opr.unity.com"
            REFLECTSYNC_ProjectServer__HttpAddress: "https://develop.opr.unity.com"
  
      secrets:
        sync-modelprocessor-safemode-secrets:
          type: Opaque
          data:
            REFLECTSYNC_ConnectionStrings__SyncServiceDatabase: "Host=opr-postgresql;Database=SyncService;Username=sync_service;Password=reflect"
            REFLECTSYNC_ProjectServer__ClientId: "syncid"
            REFLECTSYNC_ProjectServer__ClientSecret: "syncsecret"
            REFLECTSYNC_Storage__Bucket__AccessKeyId: minio
            REFLECTSYNC_Storage__Bucket__SecretAccessKey: minio123
            REFLECTSYNC_MessageBroker__MassTransit__HangfireConnectionString: "Host=opr-postgresql;Database=SyncService_Hangfire;Username=sync_service;Password=reflect"
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Username: admin
            REFLECTSYNC_MessageBroker__MassTransit__RabbitMq__Password: rabbitmq-secret-key
  
  
  
  testrunner:
    reflect-common-chart:
      secrets:
        sync-testrunner-secrets:
          type: Opaque
          data:
            SYNC_TESTSETTINGS: ""