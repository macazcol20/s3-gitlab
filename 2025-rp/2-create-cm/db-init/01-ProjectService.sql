--
-- PostgreSQL database dump
--

-- Dumped from database version 11.14
-- Dumped by pg_dump version 11.14

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: ProjectService; Type: DATABASE; Schema: -; Owner: project_service
--

CREATE DATABASE "ProjectService" WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.utf8' LC_CTYPE = 'en_US.utf8';

GRANT ALL PRIVILEGES ON DATABASE "ProjectService" TO project_service;

ALTER DATABASE "ProjectService" OWNER TO project_service;

\connect "ProjectService" project_service

SET SCHEMA 'public';


-- The following script was generated by running `dotnet ef migrations script --idempotent`
-- with a few syntax corrections:
--    - add semicolon to end of CREATE RULE and DROP RULE commands
--    - change `SELECT * FROM setval(..)` to `PERFORM setval(..)`
--    - add semicolon to end of `INSERT INTO "SyncServerAddresses"...`

CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);


DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190820173657_InitialCreate') THEN
    CREATE TABLE "SyncServers" (
        "Id" bigserial NOT NULL,
        "UUID" uuid NOT NULL,
        "UserId" character varying(64) NOT NULL,
        "UserName" character varying(128) NOT NULL,
        "EndpointAddress" character varying(256) NOT NULL,
        "MachineName" character varying(256) NOT NULL,
        "PublicIP" character varying(32) NOT NULL,
        "IsShared" boolean NOT NULL,
        "LastKeepAlive" timestamp without time zone NOT NULL,
        CONSTRAINT "PK_SyncServers" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190820173657_InitialCreate') THEN
    CREATE TABLE "SyncServerOrganizations" (
        "OrgId" character varying(64) NOT NULL,
        "SyncServerId" bigint NOT NULL,
        CONSTRAINT "PK_SyncServerOrganizations" PRIMARY KEY ("SyncServerId", "OrgId"),
        CONSTRAINT "FK_SyncServerOrganizations_SyncServers_SyncServerId" FOREIGN KEY ("SyncServerId") REFERENCES "SyncServers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190820173657_InitialCreate') THEN
    CREATE TABLE "SyncServerProjects" (
        "ProjectId" character varying(64) NOT NULL,
        "SyncServerId" bigint NOT NULL,
        CONSTRAINT "PK_SyncServerProjects" PRIMARY KEY ("SyncServerId", "ProjectId"),
        CONSTRAINT "FK_SyncServerProjects_SyncServers_SyncServerId" FOREIGN KEY ("SyncServerId") REFERENCES "SyncServers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190820173657_InitialCreate') THEN
    CREATE INDEX "IX_SyncServers_PublicIP" ON "SyncServers" ("PublicIP");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190820173657_InitialCreate') THEN
    CREATE UNIQUE INDEX "IX_SyncServers_UUID" ON "SyncServers" ("UUID");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190820173657_InitialCreate') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20190820173657_InitialCreate', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190926185753_MultipleServiceAddresses') THEN
    DROP INDEX "IX_SyncServers_PublicIP";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190926185753_MultipleServiceAddresses') THEN
    ALTER TABLE "SyncServers" DROP COLUMN "PublicIP";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190926185753_MultipleServiceAddresses') THEN
    CREATE TABLE "SyncServerAddresses" (
        "SyncServerId" bigint NOT NULL,
        "EndpointAddress" character varying(256) NOT NULL,
        CONSTRAINT "PK_SyncServerAddresses" PRIMARY KEY ("SyncServerId", "EndpointAddress"),
        CONSTRAINT "FK_SyncServerAddresses_SyncServers_SyncServerId" FOREIGN KEY ("SyncServerId") REFERENCES "SyncServers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190926185753_MultipleServiceAddresses') THEN
    INSERT INTO "SyncServerAddresses" ("SyncServerId", "EndpointAddress") SELECT "Id", "EndpointAddress" from "SyncServers";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190926185753_MultipleServiceAddresses') THEN
    ALTER TABLE "SyncServers" DROP COLUMN "EndpointAddress";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20190926185753_MultipleServiceAddresses') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20190926185753_MultipleServiceAddresses', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20191216191901_CloudSyncData') THEN
    INSERT INTO "SyncServers" ("Id", "IsShared", "LastKeepAlive", "MachineName", "UUID", "UserId", "UserName")
    VALUES (1, TRUE, TIMESTAMP '9999-12-31 23:59:59.999999', 'Cloud', 'ffffffff-ffff-ffff-ffff-ffffffffffff', '', '');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20191216191901_CloudSyncData') THEN
    CREATE RULE protect_cloud_sync_update AS ON UPDATE TO "SyncServers" WHERE old."Id" = 1 DO INSTEAD nothing;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20191216191901_CloudSyncData') THEN
    CREATE RULE protect_cloud_sync_delete AS ON DELETE TO "SyncServers" WHERE old."Id" = 1 DO INSTEAD nothing;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20191216191901_CloudSyncData') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20191216191901_CloudSyncData', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200304151950_AddSyncServerProjectSource') THEN
    ALTER TABLE "SyncServerProjects" DROP CONSTRAINT "PK_SyncServerProjects";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200304151950_AddSyncServerProjectSource') THEN
    ALTER TABLE "SyncServerProjects" ADD "Id" bigserial NOT NULL;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200304151950_AddSyncServerProjectSource') THEN
    ALTER TABLE "SyncServerProjects" ADD CONSTRAINT "PK_SyncServerProjects" PRIMARY KEY ("Id");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200304151950_AddSyncServerProjectSource') THEN
    CREATE TABLE "SyncServerProjectSources" (
        "Id" bigserial NOT NULL,
        "SyncServerProjectId" bigint NOT NULL,
        "SourceId" character varying(128) NOT NULL,
        "FlaggedForDeletion" timestamp without time zone NULL,
        "LastPublished" timestamp without time zone NOT NULL,
        CONSTRAINT "PK_SyncServerProjectSources" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_SyncServerProjectSources_SyncServerProjects_SyncServerProje~" FOREIGN KEY ("SyncServerProjectId") REFERENCES "SyncServerProjects" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200304151950_AddSyncServerProjectSource') THEN
    CREATE UNIQUE INDEX "IX_SyncServerProjects_SyncServerId_ProjectId" ON "SyncServerProjects" ("SyncServerId", "ProjectId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200304151950_AddSyncServerProjectSource') THEN
    CREATE UNIQUE INDEX "IX_SyncServerProjectSources_SyncServerProjectId_SourceId" ON "SyncServerProjectSources" ("SyncServerProjectId", "SourceId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200304151950_AddSyncServerProjectSource') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200304151950_AddSyncServerProjectSource', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200324113914_AddSyncServerOnlineStatus') THEN
    ALTER TABLE "SyncServers" ADD "IsOnline" boolean NOT NULL DEFAULT TRUE;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200324113914_AddSyncServerOnlineStatus') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200324113914_AddSyncServerOnlineStatus', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200331172407_AddSourceMetadata') THEN
    ALTER TABLE "SyncServerProjectSources" ADD "PluginName" character varying(128) NULL;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200331172407_AddSourceMetadata') THEN
    ALTER TABLE "SyncServerProjectSources" ADD "PluginVersion" character varying(32) NULL;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200331172407_AddSourceMetadata') THEN
    ALTER TABLE "SyncServerProjectSources" ADD "SourceName" character varying(128) NULL;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200331172407_AddSourceMetadata') THEN
    UPDATE "SyncServers" SET "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200331172407_AddSourceMetadata') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200331172407_AddSourceMetadata', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200608141531_IdentityColumn') THEN
    DROP RULE protect_cloud_sync_update ON "SyncServers";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200608141531_IdentityColumn') THEN
    DROP RULE protect_cloud_sync_delete ON "SyncServers";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200608141531_IdentityColumn') THEN
    ALTER TABLE "SyncServers" ALTER COLUMN "Id" TYPE bigint;
    ALTER TABLE "SyncServers" ALTER COLUMN "Id" SET NOT NULL;
    ALTER SEQUENCE "SyncServers_Id_seq" RENAME TO "SyncServers_Id_old_seq";
    ALTER TABLE "SyncServers" ALTER COLUMN "Id" DROP DEFAULT;
    ALTER TABLE "SyncServers" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY;
    PERFORM setval('"SyncServers_Id_seq"', nextval('"SyncServers_Id_old_seq"'), false);
    DROP SEQUENCE "SyncServers_Id_old_seq";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200608141531_IdentityColumn') THEN
    CREATE RULE protect_cloud_sync_update AS ON UPDATE TO "SyncServers" WHERE old."Id" = 1 DO INSTEAD nothing;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200608141531_IdentityColumn') THEN
    CREATE RULE protect_cloud_sync_delete AS ON DELETE TO "SyncServers" WHERE old."Id" = 1 DO INSTEAD nothing;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200608141531_IdentityColumn') THEN
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "Id" TYPE bigint;
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "Id" SET NOT NULL;
    ALTER SEQUENCE "SyncServerProjectSources_Id_seq" RENAME TO "SyncServerProjectSources_Id_old_seq";
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "Id" DROP DEFAULT;
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY;
    PERFORM setval('"SyncServerProjectSources_Id_seq"', nextval('"SyncServerProjectSources_Id_old_seq"'), false);
    DROP SEQUENCE "SyncServerProjectSources_Id_old_seq";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200608141531_IdentityColumn') THEN
    ALTER TABLE "SyncServerProjects" ALTER COLUMN "Id" TYPE bigint;
    ALTER TABLE "SyncServerProjects" ALTER COLUMN "Id" SET NOT NULL;
    ALTER SEQUENCE "SyncServerProjects_Id_seq" RENAME TO "SyncServerProjects_Id_old_seq";
    ALTER TABLE "SyncServerProjects" ALTER COLUMN "Id" DROP DEFAULT;
    ALTER TABLE "SyncServerProjects" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY;
    PERFORM setval('"SyncServerProjects_Id_seq"', nextval('"SyncServerProjects_Id_old_seq"'), false);
    DROP SEQUENCE "SyncServerProjects_Id_old_seq";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200608141531_IdentityColumn') THEN
    UPDATE "SyncServers" SET "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200608141531_IdentityColumn') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200608141531_IdentityColumn', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200709201857_AddAllowPublishNewProjects') THEN
    ALTER TABLE "SyncServers" ADD "AllowPublishNewProjects" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200709201857_AddAllowPublishNewProjects') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200709201857_AddAllowPublishNewProjects', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210112132819_IncreaseVarcharLength') THEN
    ALTER TABLE "SyncServers" ALTER COLUMN "UserName" TYPE character varying(512);
    ALTER TABLE "SyncServers" ALTER COLUMN "UserName" SET NOT NULL;
    ALTER TABLE "SyncServers" ALTER COLUMN "UserName" DROP DEFAULT;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210112132819_IncreaseVarcharLength') THEN
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "SourceName" TYPE character varying(512);
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "SourceName" DROP NOT NULL;
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "SourceName" DROP DEFAULT;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210112132819_IncreaseVarcharLength') THEN
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "SourceId" TYPE character varying(512);
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "SourceId" SET NOT NULL;
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "SourceId" DROP DEFAULT;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210112132819_IncreaseVarcharLength') THEN
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "PluginName" TYPE character varying(512);
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "PluginName" DROP NOT NULL;
    ALTER TABLE "SyncServerProjectSources" ALTER COLUMN "PluginName" DROP DEFAULT;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210112132819_IncreaseVarcharLength') THEN
    UPDATE "SyncServers" SET "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210112132819_IncreaseVarcharLength') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210112132819_IncreaseVarcharLength', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210113184742_LinkSharing') THEN
    CREATE TABLE "Links" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "Token" character varying(45) NOT NULL,
        "SyncServerUuid" uuid NOT NULL,
        "SyncServerProjectId" character varying(64) NOT NULL,
        "CreationTimestamp" timestamp without time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        CONSTRAINT "PK_Links" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210113184742_LinkSharing') THEN
    UPDATE "SyncServers" SET "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210113184742_LinkSharing') THEN
    CREATE UNIQUE INDEX "IX_Links_Token" ON "Links" ("Token");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210113184742_LinkSharing') THEN
    CREATE UNIQUE INDEX "IX_Links_SyncServerUuid_SyncServerProjectId" ON "Links" ("SyncServerUuid", "SyncServerProjectId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210113184742_LinkSharing') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210113184742_LinkSharing', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210118185243_TimestampUTC') THEN
    ALTER TABLE "Links" ALTER COLUMN "CreationTimestamp" TYPE timestamp without time zone;
    ALTER TABLE "Links" ALTER COLUMN "CreationTimestamp" SET NOT NULL;
    ALTER TABLE "Links" ALTER COLUMN "CreationTimestamp" SET DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210118185243_TimestampUTC') THEN
    UPDATE "SyncServers" SET "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210118185243_TimestampUTC') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210118185243_TimestampUTC', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210309135641_PublicLinks') THEN
    CREATE TYPE link_permission_data AS ENUM ('private', 'public');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210309135641_PublicLinks') THEN
    ALTER TABLE "Links" ADD "Permission" link_permission_data NOT NULL DEFAULT 'private'::link_permission_data;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210309135641_PublicLinks') THEN
    UPDATE "SyncServers" SET "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210309135641_PublicLinks') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210309135641_PublicLinks', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210310182829_CloudSyncAllowNewProjects') THEN
    DROP RULE protect_cloud_sync_update ON "SyncServers";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210310182829_CloudSyncAllowNewProjects') THEN
    DROP RULE protect_cloud_sync_delete ON "SyncServers";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210310182829_CloudSyncAllowNewProjects') THEN
    UPDATE "SyncServers" SET "AllowPublishNewProjects" = TRUE, "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210310182829_CloudSyncAllowNewProjects') THEN
    CREATE RULE protect_cloud_sync_update AS ON UPDATE TO "SyncServers" WHERE old."Id" = 1 DO INSTEAD nothing;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210310182829_CloudSyncAllowNewProjects') THEN
    CREATE RULE protect_cloud_sync_delete AS ON DELETE TO "SyncServers" WHERE old."Id" = 1 DO INSTEAD nothing;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210310182829_CloudSyncAllowNewProjects') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210310182829_CloudSyncAllowNewProjects', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210513143458_FloatingSeats') THEN
    CREATE TABLE "OrgSeats" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "EntitlementType" text NOT NULL,
        "OrgId" text NOT NULL,
        CONSTRAINT "PK_OrgSeats" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210513143458_FloatingSeats') THEN
    CREATE TABLE "OrgSeatAllocations" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "Uid" uuid NOT NULL,
        "OrgSeatId" bigint NOT NULL,
        "LastKeepAlive" timestamp without time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
        "ExpiryDate" timestamp without time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
        "DisplayName" text NOT NULL,
        CONSTRAINT "PK_OrgSeatAllocations" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_OrgSeatAllocations_OrgSeats_OrgSeatId" FOREIGN KEY ("OrgSeatId") REFERENCES "OrgSeats" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210513143458_FloatingSeats') THEN
    UPDATE "SyncServers" SET "AllowPublishNewProjects" = TRUE, "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210513143458_FloatingSeats') THEN
    CREATE INDEX "IX_OrgSeatAllocations_OrgSeatId" ON "OrgSeatAllocations" ("OrgSeatId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210513143458_FloatingSeats') THEN
    CREATE UNIQUE INDEX "IX_OrgSeatAllocations_Uid" ON "OrgSeatAllocations" ("Uid");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210513143458_FloatingSeats') THEN
    CREATE UNIQUE INDEX "IX_OrgSeats_OrgId_EntitlementType" ON "OrgSeats" ("OrgId", "EntitlementType");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210513143458_FloatingSeats') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210513143458_FloatingSeats', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210713154249_AddHttpEndpoints') THEN
    ALTER TABLE "SyncServerAddresses" ADD "Protocol" integer NOT NULL DEFAULT 0;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210713154249_AddHttpEndpoints') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210713154249_AddHttpEndpoints', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210812194951_FloatingSeatsUpdate') THEN
    ALTER TABLE "OrgSeatAllocations" ADD "UserId" text NOT NULL DEFAULT '';
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210812194951_FloatingSeatsUpdate') THEN
    UPDATE "SyncServers" SET "AllowPublishNewProjects" = TRUE, "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210812194951_FloatingSeatsUpdate') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210812194951_FloatingSeatsUpdate', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210909182207_FloatingSeatsTraceId') THEN
    ALTER TABLE "OrgSeatAllocations" DROP COLUMN "ExpiryDate";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210909182207_FloatingSeatsTraceId') THEN
    ALTER TABLE "OrgSeatAllocations" DROP COLUMN "LastKeepAlive";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210909182207_FloatingSeatsTraceId') THEN
    CREATE TABLE "OrgSeatDevices" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "OrgSeatAllocationId" bigint NOT NULL,
        "TraceId" text NOT NULL,
        "LastKeepAlive" timestamp without time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
        "ExpiryDate" timestamp without time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
        CONSTRAINT "PK_OrgSeatDevices" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_OrgSeatDevices_OrgSeatAllocations_OrgSeatAllocationId" FOREIGN KEY ("OrgSeatAllocationId") REFERENCES "OrgSeatAllocations" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210909182207_FloatingSeatsTraceId') THEN
    UPDATE "SyncServers" SET "AllowPublishNewProjects" = TRUE, "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210909182207_FloatingSeatsTraceId') THEN
    CREATE UNIQUE INDEX "IX_OrgSeatDevices_OrgSeatAllocationId_TraceId" ON "OrgSeatDevices" ("OrgSeatAllocationId", "TraceId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210909182207_FloatingSeatsTraceId') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210909182207_FloatingSeatsTraceId', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211109150333_ApiKeys') THEN
    CREATE TABLE "ApiKeys" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "Uid" text NOT NULL,
        "Salt" bytea NOT NULL,
        "Hash" bytea NOT NULL,
        "HashAlgorithm" text NOT NULL,
        "Iterations" integer NOT NULL,
        "UserId" text NOT NULL,
        "UserComment" character varying(140) NOT NULL,
        "CreationTimestamp" timestamp without time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
        "OriginalIssuer" text NOT NULL,
        CONSTRAINT "PK_ApiKeys" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211109150333_ApiKeys') THEN
    UPDATE "SyncServers" SET "AllowPublishNewProjects" = TRUE, "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211109150333_ApiKeys') THEN
    CREATE UNIQUE INDEX "IX_ApiKeys_Uid" ON "ApiKeys" ("Uid");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211109150333_ApiKeys') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20211109150333_ApiKeys', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE TABLE "DeployApps" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "ReflectAppId" uuid NOT NULL,
        "AppName" text NOT NULL,
        "UserId" character varying(64) NOT NULL,
        "ClientId" character varying(128) NOT NULL,
        "ValidIssuer" character varying(128) NOT NULL,
        "Domain" character varying(128) NOT NULL,
        "ViewerProtocol" character varying(128) NOT NULL,
        "OAuthLoginEndpoint" character varying(128) NOT NULL,
        "OAuthLogoutEndpoint" character varying(128) NOT NULL,
        "OAuthGetTokenEndpoint" character varying(128) NOT NULL,
        "OAuthRefreshTokenEndpoint" character varying(128) NOT NULL,
        "OAuthPublicKey" text NOT NULL,
        CONSTRAINT "PK_DeployApps" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE TABLE "DeployAppOrgs" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "Name" character varying(256) NOT NULL,
        "DeployAppId" bigint NOT NULL,
        CONSTRAINT "PK_DeployAppOrgs" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_DeployAppOrgs_DeployApps_DeployAppId" FOREIGN KEY ("DeployAppId") REFERENCES "DeployApps" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE TABLE "DeployAppViewerBundleIds" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "DeployAppId1" bigint NOT NULL,
        "BundleId" text NOT NULL,
        "Platform" text NOT NULL,
        CONSTRAINT "PK_DeployAppViewerBundleIds" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_DeployAppViewerBundleIds_DeployApps_DeployAppId1" FOREIGN KEY ("DeployAppId1") REFERENCES "DeployApps" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE TABLE "DeployAppProjects" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "DeployAppOrgId" bigint NOT NULL,
        "ReflectProjectId" uuid NOT NULL,
        "Name" character varying(256) NOT NULL,
        "ExternalId" character varying(256) NOT NULL,
        CONSTRAINT "PK_DeployAppProjects" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_DeployAppProjects_DeployAppOrgs_DeployAppOrgId" FOREIGN KEY ("DeployAppOrgId") REFERENCES "DeployAppOrgs" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    UPDATE "SyncServers" SET "AllowPublishNewProjects" = TRUE, "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE INDEX "IX_DeployAppOrgs_DeployAppId" ON "DeployAppOrgs" ("DeployAppId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE UNIQUE INDEX "IX_DeployAppOrgs_Name_DeployAppId" ON "DeployAppOrgs" ("Name", "DeployAppId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE INDEX "IX_DeployAppProjects_DeployAppOrgId" ON "DeployAppProjects" ("DeployAppOrgId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE UNIQUE INDEX "IX_DeployAppProjects_ReflectProjectId" ON "DeployAppProjects" ("ReflectProjectId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE UNIQUE INDEX "IX_DeployAppProjects_ExternalId_DeployAppOrgId" ON "DeployAppProjects" ("ExternalId", "DeployAppOrgId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE UNIQUE INDEX "IX_DeployApps_Domain" ON "DeployApps" ("Domain");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE UNIQUE INDEX "IX_DeployApps_ReflectAppId" ON "DeployApps" ("ReflectAppId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE UNIQUE INDEX "IX_DeployApps_ViewerProtocol" ON "DeployApps" ("ViewerProtocol");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE INDEX "IX_DeployAppViewerBundleIds_DeployAppId1" ON "DeployAppViewerBundleIds" ("DeployAppId1");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    CREATE UNIQUE INDEX "IX_DeployAppViewerBundleIds_BundleId_Platform" ON "DeployAppViewerBundleIds" ("BundleId", "Platform");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220127210136_AddDeployApps') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220127210136_AddDeployApps', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220203140213_DeviceLogin') THEN
    CREATE TABLE "DeviceLoginCodes" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "UserCode" character varying(6) NOT NULL,
        "DeviceCode" character varying(40) NOT NULL,
        "Expiry" timestamp without time zone NOT NULL,
        "ActivatedOn" timestamp without time zone NULL,
        "UserId" text NULL,
        "Issuer" text NULL,
        CONSTRAINT "PK_DeviceLoginCodes" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220203140213_DeviceLogin') THEN
    UPDATE "SyncServers" SET "AllowPublishNewProjects" = TRUE, "IsOnline" = TRUE
    WHERE "Id" = 1;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220203140213_DeviceLogin') THEN
    CREATE UNIQUE INDEX "IX_DeviceLoginCodes_DeviceCode" ON "DeviceLoginCodes" ("DeviceCode");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220203140213_DeviceLogin') THEN
    CREATE UNIQUE INDEX "IX_DeviceLoginCodes_UserCode" ON "DeviceLoginCodes" ("UserCode");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220203140213_DeviceLogin') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220203140213_DeviceLogin', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    DROP TABLE "DeployAppProjects";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    DROP TABLE "DeployAppViewerBundleIds";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    DROP TABLE "DeployAppOrgs";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    DROP TABLE "DeployApps";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    ALTER TABLE "SyncServers" ALTER COLUMN "UserId" TYPE character varying(256);
    ALTER TABLE "SyncServers" ALTER COLUMN "UserId" SET NOT NULL;
    ALTER TABLE "SyncServers" ALTER COLUMN "UserId" DROP DEFAULT;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE TABLE "DeployIdPs" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "ReflectDeployIdP" uuid NOT NULL,
        "AppName" text NOT NULL,
        "UserId" character varying(256) NOT NULL,
        "ClientId" character varying(128) NOT NULL,
        "ValidIssuer" character varying(128) NOT NULL,
        "Domain" character varying(128) NOT NULL,
        "ViewerProtocol" character varying(128) NOT NULL,
        "OAuthLoginEndpoint" character varying(128) NOT NULL,
        "OAuthLogoutEndpoint" character varying(128) NULL,
        "OAuthGetTokenEndpoint" character varying(128) NOT NULL,
        "OAuthRefreshTokenEndpoint" character varying(128) NULL,
        "OAuthPublicKey" text NOT NULL,
        CONSTRAINT "PK_DeployIdPs" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE TABLE "DeployIdPOrgs" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "OrgId" character varying(64) NOT NULL,
        "Name" character varying(256) NOT NULL,
        "Archived" boolean NOT NULL,
        "DeployIdPId" bigint NOT NULL,
        CONSTRAINT "PK_DeployIdPOrgs" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_DeployIdPOrgs_DeployIdPs_DeployIdPId" FOREIGN KEY ("DeployIdPId") REFERENCES "DeployIdPs" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE TABLE "DeployIdPViewerBundleIds" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "DeployIdPId1" bigint NOT NULL,
        "BundleId" text NOT NULL,
        "Platform" text NOT NULL,
        CONSTRAINT "PK_DeployIdPViewerBundleIds" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_DeployIdPViewerBundleIds_DeployIdPs_DeployIdPId1" FOREIGN KEY ("DeployIdPId1") REFERENCES "DeployIdPs" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE TABLE "DeployIdPProjects" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "DeployIdPOrgId" bigint NOT NULL,
        "ProjectId" character varying(64) NOT NULL,
        "Name" character varying(256) NOT NULL,
        "Archived" boolean NOT NULL,
        CONSTRAINT "PK_DeployIdPProjects" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_DeployIdPProjects_DeployIdPOrgs_DeployIdPOrgId" FOREIGN KEY ("DeployIdPOrgId") REFERENCES "DeployIdPOrgs" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE UNIQUE INDEX "IX_DeployIdPOrgs_DeployIdPId_OrgId" ON "DeployIdPOrgs" ("DeployIdPId", "OrgId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE UNIQUE INDEX "IX_DeployIdPProjects_DeployIdPOrgId_ProjectId" ON "DeployIdPProjects" ("DeployIdPOrgId", "ProjectId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE UNIQUE INDEX "IX_DeployIdPs_Domain" ON "DeployIdPs" ("Domain");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE UNIQUE INDEX "IX_DeployIdPs_ReflectDeployIdP" ON "DeployIdPs" ("ReflectDeployIdP");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE UNIQUE INDEX "IX_DeployIdPs_ViewerProtocol" ON "DeployIdPs" ("ViewerProtocol");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE INDEX "IX_DeployIdPViewerBundleIds_DeployIdPId1" ON "DeployIdPViewerBundleIds" ("DeployIdPId1");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    CREATE UNIQUE INDEX "IX_DeployIdPViewerBundleIds_BundleId_Platform" ON "DeployIdPViewerBundleIds" ("BundleId", "Platform");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220214135153_DeployAppTweaks') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220214135153_DeployAppTweaks', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301010657_DeviceSessionsRename') THEN
    DROP TABLE "DeviceLoginCodes";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301010657_DeviceSessionsRename') THEN
    CREATE TABLE "DeviceSessions" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "UserCode" character varying(6) NOT NULL,
        "DeviceCode" character varying(40) NOT NULL,
        "UserCodeExpiry" timestamp without time zone NOT NULL,
        "ActivatedOn" timestamp without time zone NULL,
        "UserId" text NULL,
        "Issuer" text NULL,
        "Type" text NOT NULL,
        "Name" text NOT NULL,
        "Model" text NOT NULL,
        CONSTRAINT "PK_DeviceSessions" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301010657_DeviceSessionsRename') THEN
    CREATE UNIQUE INDEX "IX_DeviceSessions_DeviceCode" ON "DeviceSessions" ("DeviceCode");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301010657_DeviceSessionsRename') THEN
    CREATE UNIQUE INDEX "IX_DeviceSessions_UserCode" ON "DeviceSessions" ("UserCode") WHERE "ActivatedOn" is Null;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301010657_DeviceSessionsRename') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220301010657_DeviceSessionsRename', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301011307_DeployIdpUniqueProjectId') THEN
    DROP INDEX "IX_DeployIdPProjects_DeployIdPOrgId_ProjectId";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301011307_DeployIdpUniqueProjectId') THEN
    ALTER TABLE "DeployIdPProjects" DROP COLUMN "ProjectId";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301011307_DeployIdpUniqueProjectId') THEN
    ALTER TABLE "DeployIdPProjects" ADD "ExternalProjectId" character varying(64) NOT NULL DEFAULT '';
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301011307_DeployIdpUniqueProjectId') THEN
    ALTER TABLE "DeployIdPProjects" ADD "GloballyUniqueProjectId" text NOT NULL DEFAULT '';
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301011307_DeployIdpUniqueProjectId') THEN
    CREATE UNIQUE INDEX "IX_DeployIdPProjects_GloballyUniqueProjectId" ON "DeployIdPProjects" ("GloballyUniqueProjectId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301011307_DeployIdpUniqueProjectId') THEN
    CREATE UNIQUE INDEX "IX_DeployIdPProjects_DeployIdPOrgId_ExternalProjectId" ON "DeployIdPProjects" ("DeployIdPOrgId", "ExternalProjectId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301011307_DeployIdpUniqueProjectId') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220301011307_DeployIdpUniqueProjectId', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301012013_DeployIdpTokenValidation') THEN
    ALTER TABLE "DeployIdPs" DROP COLUMN "OAuthPublicKey";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301012013_DeployIdpTokenValidation') THEN
    ALTER TABLE "DeployIdPs" ADD "ClientIdClaim" text NULL;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301012013_DeployIdpTokenValidation') THEN
    ALTER TABLE "DeployIdPs" ADD "CustomClaimPrefix" text NULL;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301012013_DeployIdpTokenValidation') THEN
    ALTER TABLE "DeployIdPs" ADD "OAuthJwkUrl" character varying(128) NULL;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301012013_DeployIdpTokenValidation') THEN
    ALTER TABLE "DeployIdPs" ADD "OAuthUserInfoUrl" character varying(128) NULL;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301012013_DeployIdpTokenValidation') THEN
    CREATE UNIQUE INDEX "IX_DeployIdPs_ValidIssuer_ClientId" ON "DeployIdPs" ("ValidIssuer", "ClientId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301012013_DeployIdpTokenValidation') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220301012013_DeployIdpTokenValidation', '3.1.18');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301153029_OAuthUrlTweaks') THEN
    ALTER TABLE "DeployIdPs" RENAME COLUMN "OAuthLogoutEndpoint" TO "OAuthRevokeEndpoint";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301153029_OAuthUrlTweaks') THEN
    ALTER TABLE "DeployIdPs" RENAME COLUMN "OAuthLoginEndpoint" TO "OAuthAuthorizeEndpoint";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220301153029_OAuthUrlTweaks') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220301153029_OAuthUrlTweaks', '3.1.18');
    END IF;
END $$;
